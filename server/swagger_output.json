{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "Giant Store Rest API",
		"contact": {
			"email": "zorefbarak@gmail.com"
		},
		"description": "All endpoints available for requests"
	},
	"host": "localhost:3001",
	"basePath": "/",
	"tags": [
		{ "name": "users", "description": "Login / Register / Logout" },
		{ "name": "cart items", "description": "Add, delete, or update cart items" },
		{ "name": "carts", "description": "Add new cart, or get the last cart" },
		{ "name": "categories", "description": "Displaying categories" },
		{ "name": "orders", "description": "Order operations" },
		{ "name": "products", "description": "Products operations" }
	],
	"schemes": ["http"],
	"paths": {
		"/users/login": {
			"post": {
				"tags": ["users"],
				"summary": "Logs the user in",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"userName": { "example": "barak@gmail.com" },
								"password": { "example": "123456" }
							}
						}
					}
				],
				"responses": {
					"200": { "description": "Accepted credentials", "schema": { "$ref": "#/definitions/User" } },
					"600": { "description": "Error", "schema": { "$ref": "#/definitions/40X Error" } }
				}
			}
		},
		"/users/is_exist": {
			"post": {
				"tags": ["users"],
				"summary": "Check whether the userName or ID is already registered in the server",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"example": "123456782"
								},
								"userName": {
									"example": "already.taken@gmail.com"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Valid request, either in use (true) or OK to use (false)"
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			}
		},
		"/users/": {
			"post": {
				"tags": ["users"],
				"summary": "Register a new user account",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"userName": {
									"example": "email@email.com"
								},
								"id": {
									"type": "string",
									"example": "123456782"
								},
								"password": {
									"example": "123456"
								},
								"firstName": {
									"example": "Peter"
								},
								"lastName": {
									"example": "Parker"
								},
								"city": {
									"example": "Queens, New York"
								},
								"street": {
									"example": "Secret st."
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "User was created successfuly"
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			}
		},
		"/cart_items": {
			"post": {
				"tags": ["cart items"],
				"summary": "Add new cart item",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"productId": {
									"example": 3
								},
								"quantity": {
									"example": 5
								},
								"cartId": {
									"example": 21
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "cart item was added successfuly"
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			}
		},
		"/cart_items/{id}": {
			"delete": {
				"tags": ["cart items"],
				"summary": "Delete cart item",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "cart item was deleted successfuly from the cart"
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			},
			"get": {
				"tags": ["cart items"],
				"summary": "Get all cart items",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"schema": { "type":"array", "items": { "$ref": "#/definitions/cart_item"} }
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			}
		},
		"/cart_items/": {
			"put": {
				"tags": ["cart items"],
				"summary": "update cart item quantity",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"cartItemId": {
									"example": 81
								},
								"quantity": {
									"example": 6
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "cart item quantity was updated successfuly"
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			}
		},
		"/cart_items/by_cart_id/{id}": 
		{
			"delete": {
				"tags": ["cart items"],
				"summary": "Delete all cart items",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "all cart items was deleted succesfully from cart"
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			}
		},
		"/carts": {
			"post": {
				"tags": ["carts"],
				"summary": "Add new cart",
				"parameters": [
					{
						"name": "authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDAwMDAwMCwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTQyMDl9.wBticOTi8xYDk-YByzV7umhYviq0EKxZNVhS5nSHmv0"
					}
				],
				"responses": {
					"200": {
						"schema": {"$ref": "#/definitions/cart"}
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			},
			"get": {
				"tags": ["carts"],
				"summary": "Get last cart",
				"parameters": [
					{
						"name": "authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDAwMDAwMCwicm9sZSI6InVzZXIiLCJpYXQiOjE2NTc3OTQyMDl9.wBticOTi8xYDk-YByzV7umhYviq0EKxZNVhS5nSHmv0"
					}
				],
				"responses": {
					"200": {
						"schema": {"$ref": "#/definitions/cart"}
					},
					"600": {
						"description": "Error",
						"schema": { "$ref": "#/definitions/40X Error" }
					}
				}
			}
		}
	},
	"definitions": {
		"cart_item": {
			"type": "object",
			"properties": 
			{
				"id": { "type": "integer", "example": "97" },
				"name": { "type": "string","example": "Cream Cheese" },
				"unitPrice": { "type": "integer", "example": "105.52" },
				"quantity": { "type": "integer", "example": "2" },
				"imgUrl": { "type": "imgUrl", "example": "cream-cheese.png" },
				"productId": { "type": "integer", "example": "3" },
				"cartId": { "type": "integer", "example": "55" }
			}
		},
		"cart": {
			"type": "object",
			"properties": 
			{
				"id": { "type": "integer", "example": "70" },
				"creationDate": { "type": "date-time","example": "2022-07-14T10:13:23.082Z" },
				"isOpen": { "type": "integer", "enum": [0, 1], "example": "0" }
			}
		},
		"User CartWithoutOrderID": {
			"type": "object",
			"required": ["_id", "userID", "total", "createdAt"],
			"properties": {
				"_id": { "type": "string", "example": "66fffee3dfca" },
				"userID": { "type": "integer", "format": "int32", "example": "123456782" },
				"total": { "type": "integer", "format": "decimal", "example": "105.52" },
				"createdAt": { "type": "string", "format": "date-time" },
				"items": { "type": "array", "items": { "$ref": "#/definitions/User CartItem" } }
			}
		},
		"User CartWithoutItems": {
			"type": "object",
			"required": ["_id", "userID", "total", "createdAt"],
			"properties": {
				"_id": { "type": "string", "example": "66fffee3dfca" },
				"userID": { "type": "integer", "format": "int32", "example": "123456782" },
				"total": { "type": "integer", "format": "decimal", "example": "0" },
				"createdAt": { "type": "string", "format": "date-time" },
				"items": { "type": "array", "example": [] }
			}
		},
		"User CartItem": {
			"type": "object",
			"required": ["productID", "quantity", "_id"],
			"properties": {
				"productID": { "type": "string", "example": "66fee436fg" },
				"quantity": { "type": "integer", "format": "int16", "example": "4" },
				"_id": { "type": "string", "example": "66ff45d6cvb" }
			}
		},
		"User": {
			"type": "object",
			"required": ["token", "userName", "role"],
			"properties": {
				"name": {
					"type": "object",
					"required": ["first", "last"],
					"properties": { "first": { "type": "string", "example": "Peter" }, "last": { "type": "string", "example": "Parker" } }
				},
				"address": {
					"type": "object",
					"required": ["city", "street"],
					"properties": {
						"city": { "type": "string", "example": "Queens, New York City, New York" },
						"street": { "type": "string", "example": "It's a secret ðŸ˜¶" }
					}
				},
				"_id": { "type": "integer", "format": "int32", "example": "123456782" },
				"email": { "type": "string", "example": "Incredible.arachnid.person@gmail.com" },
				"role": { "type": "string", "enum": ["user", "admin"] },
				"carts": {
					"type": "array",
					"items": {
						"type": "array",
						"$ref": "#/definitions/User Cart"
					}
				}
			}
		},
		"User WithoutOrderID": {
			"type": "object",
			"required": ["_id", "email", "role"],
			"properties": {
				"name": {
					"type": "object",
					"required": ["first", "last"],
					"properties": { "first": { "type": "string", "example": "Peter" }, "last": { "type": "string", "example": "Parker" } }
				},
				"address": {
					"type": "object",
					"required": ["city", "street"],
					"properties": {
						"city": { "type": "string", "example": "Queens, New York City, New York" },
						"street": { "type": "string", "example": "It's a secret ðŸ˜¶" }
					}
				},
				"_id": { "type": "integer", "format": "int32", "example": "123456782" },
				"email": { "type": "string", "example": "Incredible.arachnid.person@gmail.com" },
				"role": { "type": "string", "enum": ["user", "admin"] },
				"carts": {
					"type": "array",
					"items": {
						"type": "array",
						"$ref": "#/definitions/User CartWithoutOrderID"
					}
				}
			}
		},
		"User WithoutItems": {
			"type": "object",
			"required": ["_id", "email", "role"],
			"properties": {
				"name": {
					"type": "object",
					"required": ["first", "last"],
					"properties": { "first": { "type": "string", "example": "Peter" }, "last": { "type": "string", "example": "Parker" } }
				},
				"address": {
					"type": "object",
					"required": ["city", "street"],
					"properties": {
						"city": { "type": "string", "example": "Queens, New York City, New York" },
						"street": { "type": "string", "example": "It's a secret ðŸ˜¶" }
					}
				},
				"_id": { "type": "integer", "format": "int32", "example": "123456782" },
				"email": { "type": "string", "example": "Incredible.arachnid.person@gmail.com" },
				"role": { "type": "string", "enum": ["user", "admin"] },
				"carts": {
					"type": "array",
					"items": {
						"type": "array",
						"$ref": "#/definitions/User CartWithoutItems"
					}
				}
			}
		},
		"Product": {
			"type": "object",
			"required": ["name", "_id", "priceInteger", "priceDecimal", "imageURL", "isInWeight"],
			"properties": {
				"_id": { "type": "string", "example": "66fee436fg" },
				"categoryID": { "type": "object", "properties": { "_id": { "type": "string", "example": "Dairy & Eggs" } } },
				"imageURL": { "type": "string", "example": "assets/Milk.png" },
				"isInWeight": { "type": "boolean", "example": false },
				"name": { "type": "string", "example": "Milk" },
				"priceDecimal": { "type": "integer", "format": "int8", "example": 90 },
				"priceInteger": { "type": "integer", "format": "int8", "example": 8 }
			}
		},
		"ProductWithoutID": {
			"type": "object",
			"required": ["name", "priceInteger", "priceDecimal", "imageURL", "isInWeight"],
			"properties": {
				"categoryID": { "type": "object", "properties": { "_id": { "type": "string", "example": "Dairy & Eggs" } } },
				"imageURL": { "type": "string", "example": "assets/Milk.png" },
				"isInWeight": { "type": "boolean", "example": false },
				"name": { "type": "string", "example": "Milk" },
				"priceDecimal": { "type": "integer", "format": "int8", "example": 90 },
				"priceInteger": { "type": "integer", "format": "int8", "example": 8 }
			}
		},
		"Cart": {
			"type": "object",
			"required": ["_id", "userID", "total", "createdAt"],
			"properties": {
				"_id": { "type": "string", "example": "66fffee3dfca" },
				"userID": { "type": "integer", "format": "int32", "example": "123456782" },
				"total": { "type": "integer", "format": "decimal", "example": "105.52" },
				"createdAt": { "type": "string", "format": "date-time" },
				"items": { "type": "array", "items": { "$ref": "#/definitions/Product" } }
			}
		},
		"Order": {
			"type": "object",
			"required": ["_id", "lastFourCardDigits", "shipping", "dateMade"],
			"properties": {
				"shipping": {
					"type": "object",
					"properties": {
						"city": { "type": "string", "example": "Queens, New York City, New York", "required": true },
						"street": { "type": "string", "example": "It's a secret ðŸ˜¶", "required": true },
						"date": { "type": "string", "format": "date-time", "required": true }
					}
				},
				"_id": { "type": "string", "example": "66fffee3dfca" },
				"lastFourCardDigits": { "type": "integer", "format": "int16", "example": "1234" },
				"dateMade": { "type": "string", "format": "date-time" }
			}
		},
		"40X Error": {
			"type": "object",
			"properties": {
				"err": { "example": true },
				"msg": { "example": "Message written in description" }
			}
		},
		"Internal Server Error": {
			"type": "object",
			"properties": {
				"err": { "example": true },
				"msg": { "example": "Server failed... Message Given:" }
			}
		}
	}
}
